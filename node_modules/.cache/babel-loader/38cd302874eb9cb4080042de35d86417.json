{"ast":null,"code":"var _jsxFileName = \"/Users/mostafamahmood/Documents/web-project/burj-al-arab/burj-al-arab/src/components/Login/Login.js\";\nimport React, { useContext } from 'react';\nimport firebaseConfig from './firebase.confiq';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst Login = () => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  ;\n\n  const handleGoogleSignIn = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      const {\n        displayName,\n        email\n      } = result.user;\n      const signedInUser = {\n        name: displayName,\n        email\n      };\n      setLoggedInUser(signedInUser);\n      history.replace(from);\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"This is Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleGoogleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Google Sign In\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/mostafamahmood/Documents/web-project/burj-al-arab/burj-al-arab/src/components/Login/Login.js"],"names":["React","useContext","firebaseConfig","firebase","UserContext","useHistory","useLocation","Login","loggedInUser","setLoggedInUser","history","location","from","state","pathname","apps","length","initializeApp","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","displayName","email","user","signedInUser","name","replace","catch","error","errorCode","code","errorMessage","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,UAAU,CAACG,WAAD,CAAlD;AACA,QAAMM,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWD,QAAQ,CAACE,KAAT,IAAkB;AAAED,IAAAA,IAAI,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAAnC;;AAGA,MAAIX,QAAQ,CAACY,IAAT,CAAcC,MAAd,KAAuB,CAA3B,EAA8B;AAC1Bb,IAAAA,QAAQ,CAACc,aAAT,CAAuBf,cAAvB;AACH;;AACF;;AACC,QAAMgB,kBAAkB,GAAG,MAAM;AAC7B,QAAIC,QAAQ,GAAG,IAAIhB,QAAQ,CAACiB,IAAT,CAAcC,kBAAlB,EAAf;AAEAlB,IAAAA,QAAQ,CAACiB,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,UAASC,MAAT,EAAiB;AAE5D,YAAM;AAACC,QAAAA,WAAD;AAAeC,QAAAA;AAAf,UAAwBF,MAAM,CAACG,IAArC;AACA,YAAMC,YAAY,GAAG;AAACC,QAAAA,IAAI,EAAEJ,WAAP;AAAoBC,QAAAA;AAApB,OAArB;AACAjB,MAAAA,eAAe,CAACmB,YAAD,CAAf;AACAlB,MAAAA,OAAO,CAACoB,OAAR,CAAgBlB,IAAhB;AACD,KANH,EAMKmB,KANL,CAMW,UAASC,KAAT,EAAgB;AACvB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AAED,KAXH;AAcH,GAjBD;;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAQ,IAAA,OAAO,EAAElB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ;AAMH,CAnCD;;AAqCA,eAAeX,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport firebaseConfig from './firebase.confiq';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n\nconst Login = () => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    const history = useHistory();\n    const location = useLocation();\n    const { from } = location.state || { from: { pathname: \"/\" } };\n    \n\n    if (firebase.apps.length===0) {\n        firebase.initializeApp(firebaseConfig);\n    }\n   ;\n    const handleGoogleSignIn = () => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            \n            const {displayName , email} = result.user;\n            const signedInUser = {name: displayName, email}\n            setLoggedInUser(signedInUser);\n            history.replace(from);\n          }).catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            \n          });\n\n\n    }\n    return (\n        <div>\n            <h1>This is Login</h1>\n            <button onClick={handleGoogleSignIn}>Google Sign In</button>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}